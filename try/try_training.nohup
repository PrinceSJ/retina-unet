Using TensorFlow backend.

train images/masks shape:
(20, 1, 556, 565)
train images range (min-max): 0.0 - 1.0
train masks are within 0-1

patches per full image: 1

train PATCHES images/masks shape:
(20, 1, 48, 48)
train PATCHES images range (min-max): 0.00784313725490196 - 0.8705882352941177
2019-04-05 14:43:30.686438: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 FMA
2019-04-05 14:43:30.689208: I tensorflow/core/common_runtime/process_util.cc:69] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance.
Traceback (most recent call last):
  File "/home/moriaty/anaconda3/envs/tensorflow/lib/python3.6/site-packages/tensorflow/python/framework/ops.py", line 1628, in _create_c_op
    c_op = c_api.TF_FinishOperation(op_desc)
tensorflow.python.framework.errors_impl.InvalidArgumentError: Negative dimension size caused by subtracting 7 from 2 for 'average_pooling2d_1/AvgPool' (op: 'AvgPool') with input shapes: [?,2,2,2048].

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "./src/retinaNN_training.py", line 241, in <module>
    model = resnet_50(n_ch, patch_height, patch_width)  #the ResNet model
  File "./src/retinaNN_training.py", line 135, in resnet_50
    x = AveragePooling2D(pool_size=(7, 7))(x)
  File "/home/moriaty/.local/lib/python3.6/site-packages/keras/engine/base_layer.py", line 457, in __call__
    output = self.call(inputs, **kwargs)
  File "/home/moriaty/.local/lib/python3.6/site-packages/keras/layers/pooling.py", line 205, in call
    data_format=self.data_format)
  File "/home/moriaty/.local/lib/python3.6/site-packages/keras/layers/pooling.py", line 322, in _pooling_function
    padding, data_format, pool_mode='avg')
  File "/home/moriaty/.local/lib/python3.6/site-packages/keras/backend/tensorflow_backend.py", line 3982, in pool2d
    data_format=tf_data_format)
  File "/home/moriaty/anaconda3/envs/tensorflow/lib/python3.6/site-packages/tensorflow/python/ops/nn_ops.py", line 2110, in avg_pool
    name=name)
  File "/home/moriaty/anaconda3/envs/tensorflow/lib/python3.6/site-packages/tensorflow/python/ops/gen_nn_ops.py", line 72, in avg_pool
    data_format=data_format, name=name)
  File "/home/moriaty/anaconda3/envs/tensorflow/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py", line 787, in _apply_op_helper
    op_def=op_def)
  File "/home/moriaty/anaconda3/envs/tensorflow/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py", line 488, in new_func
    return func(*args, **kwargs)
  File "/home/moriaty/anaconda3/envs/tensorflow/lib/python3.6/site-packages/tensorflow/python/framework/ops.py", line 3274, in create_op
    op_def=op_def)
  File "/home/moriaty/anaconda3/envs/tensorflow/lib/python3.6/site-packages/tensorflow/python/framework/ops.py", line 1792, in __init__
    control_input_ops)
  File "/home/moriaty/anaconda3/envs/tensorflow/lib/python3.6/site-packages/tensorflow/python/framework/ops.py", line 1631, in _create_c_op
    raise ValueError(str(e))
ValueError: Negative dimension size caused by subtracting 7 from 2 for 'average_pooling2d_1/AvgPool' (op: 'AvgPool') with input shapes: [?,2,2,2048].
 00013: val_loss improved from 0.65265 to 0.64951, saving model to ./try/try_best_weights.h5
Epoch 14/150
 - 3s - loss: 0.6545 - acc: 0.8624 - val_loss: 0.6464 - val_acc: 0.9160

Epoch 00014: val_loss improved from 0.64951 to 0.64636, saving model to ./try/try_best_weights.h5
Epoch 15/150
 - 3s - loss: 0.6518 - acc: 0.8624 - val_loss: 0.6432 - val_acc: 0.9160

Epoch 00015: val_loss improved from 0.64636 to 0.64319, saving model to ./try/try_best_weights.h5
Epoch 16/150
 - 3s - loss: 0.6489 - acc: 0.8624 - val_loss: 0.6400 - val_acc: 0.9160

Epoch 00016: val_loss improved from 0.64319 to 0.64000, saving model to ./try/try_best_weights.h5
Epoch 17/150
 - 2s - loss: 0.6461 - acc: 0.8624 - val_loss: 0.6368 - val_acc: 0.9160

Epoch 00017: val_loss improved from 0.64000 to 0.63679, saving model to ./try/try_best_weights.h5
Epoch 18/150
 - 2s - loss: 0.6432 - acc: 0.8624 - val_loss: 0.6336 - val_acc: 0.9160

Epoch 00018: val_loss improved from 0.63679 to 0.63357, saving model to ./try/try_best_weights.h5
Epoch 19/150
 - 2s - loss: 0.6404 - acc: 0.8624 - val_loss: 0.6303 - val_acc: 0.9160

Epoch 00019: val_loss improved from 0.63357 to 0.63034, saving model to ./try/try_best_weights.h5
Epoch 20/150
 - 2s - loss: 0.6375 - acc: 0.8624 - val_loss: 0.6271 - val_acc: 0.9160

Epoch 00020: val_loss improved from 0.63034 to 0.62709, saving model to ./try/try_best_weights.h5
Epoch 21/150
 - 2s - loss: 0.6346 - acc: 0.8624 - val_loss: 0.6238 - val_acc: 0.9160

Epoch 00021: val_loss improved from 0.62709 to 0.62383, saving model to ./try/try_best_weights.h5
Epoch 22/150
 - 2s - loss: 0.6316 - acc: 0.8624 - val_loss: 0.6206 - val_acc: 0.9160

Epoch 00022: val_loss improved from 0.62383 to 0.62055, saving model to ./try/try_best_weights.h5
Epoch 23/150
 - 2s - loss: 0.6286 - acc: 0.8624 - val_loss: 0.6173 - val_acc: 0.9160

Epoch 00023: val_loss improved from 0.62055 to 0.61726, saving model to ./try/try_best_weights.h5
Epoch 24/150
 - 2s - loss: 0.6257 - acc: 0.8624 - val_loss: 0.6140 - val_acc: 0.9160

Epoch 00024: val_loss improved from 0.61726 to 0.61396, saving model to ./try/try_best_weights.h5
Epoch 25/150
 - 2s - loss: 0.6227 - acc: 0.8624 - val_loss: 0.6106 - val_acc: 0.9160

Epoch 00025: val_loss improved from 0.61396 to 0.61064, saving model to ./try/try_best_weights.h5
Epoch 26/150
 - 2s - loss: 0.6197 - acc: 0.8624 - val_loss: 0.6073 - val_acc: 0.9160

Epoch 00026: val_loss improved from 0.61064 to 0.60731, saving model to ./try/try_best_weights.h5
Epoch 27/150
 - 2s - loss: 0.6168 - acc: 0.8624 - val_loss: 0.6040 - val_acc: 0.9160

Epoch 00027: val_loss improved from 0.60731 to 0.60396, saving model to ./try/try_best_weights.h5
Epoch 28/150
 - 2s - loss: 0.6137 - acc: 0.8624 - val_loss: 0.6006 - val_acc: 0.9160

Epoch 00028: val_loss improved from 0.60396 to 0.60059, saving model to ./try/try_best_weights.h5
Epoch 29/150
 - 2s - loss: 0.6106 - acc: 0.8624 - val_loss: 0.5972 - val_acc: 0.9160

Epoch 00029: val_loss improved from 0.60059 to 0.59719, saving model to ./try/try_best_weights.h5
Epoch 30/150
 - 3s - loss: 0.6076 - acc: 0.8624 - val_loss: 0.5938 - val_acc: 0.9160

Epoch 00030: val_loss improved from 0.59719 to 0.59375, saving model to ./try/try_best_weights.h5
Epoch 31/150
 - 3s - loss: 0.6044 - acc: 0.8624 - val_loss: 0.5903 - val_acc: 0.9160

Epoch 00031: val_loss improved from 0.59375 to 0.59028, saving model to ./try/try_best_weights.h5
Epoch 32/150
 - 3s - loss: 0.6013 - acc: 0.8624 - val_loss: 0.5868 - val_acc: 0.9160

Epoch 00032: val_loss improved from 0.59028 to 0.58678, saving model to ./try/try_best_weights.h5
Epoch 33/150
 - 3s - loss: 0.5982 - acc: 0.8624 - val_loss: 0.5832 - val_acc: 0.9160

Epoch 00033: val_loss improved from 0.58678 to 0.58325, saving model to ./try/try_best_weights.h5
Epoch 34/150
 - 3s - loss: 0.5952 - acc: 0.8624 - val_loss: 0.5797 - val_acc: 0.9160

Epoch 00034: val_loss improved from 0.58325 to 0.57969, saving model to ./try/try_best_weights.h5
Epoch 35/150
 - 3s - loss: 0.5919 - acc: 0.8624 - val_loss: 0.5761 - val_acc: 0.9160

Epoch 00035: val_loss improved from 0.57969 to 0.57610, saving model to ./try/try_best_weights.h5
Epoch 36/150
 - 3s - loss: 0.5888 - acc: 0.8624 - val_loss: 0.5725 - val_acc: 0.9160

Epoch 00036: val_loss improved from 0.57610 to 0.57248, saving model to ./try/try_best_weights.h5
Epoch 37/150
 - 3s - loss: 0.5856 - acc: 0.8624 - val_loss: 0.5688 - val_acc: 0.9160

Epoch 00037: val_loss improved from 0.57248 to 0.56883, saving model to ./try/try_best_weights.h5
Epoch 38/150
 - 3s - loss: 0.5822 - acc: 0.8624 - val_loss: 0.5651 - val_acc: 0.9160

Epoch 00038: val_loss improved from 0.56883 to 0.56515, saving model to ./try/try_best_weights.h5
Epoch 39/150
 - 2s - loss: 0.5791 - acc: 0.8624 - val_loss: 0.5614 - val_acc: 0.9160

Epoch 00039: val_loss improved from 0.56515 to 0.56144, saving model to ./try/try_best_weights.h5
Epoch 40/150
 - 2s - loss: 0.5758 - acc: 0.8624 - val_loss: 0.5577 - val_acc: 0.9160

Epoch 00040: val_loss improved from 0.56144 to 0.55769, saving model to ./try/try_best_weights.h5
Epoch 41/150
 - 2s - loss: 0.5725 - acc: 0.8624 - val_loss: 0.5539 - val_acc: 0.9160

Epoch 00041: val_loss improved from 0.55769 to 0.55391, saving model to ./try/try_best_weights.h5
Epoch 42/150
 - 2s - loss: 0.5690 - acc: 0.8624 - val_loss: 0.5501 - val_acc: 0.9160

Epoch 00042: val_loss improved from 0.55391 to 0.55009, saving model to ./try/try_best_weights.h5
Epoch 43/150
 - 2s - loss: 0.5659 - acc: 0.8624 - val_loss: 0.5462 - val_acc: 0.9160

Epoch 00043: val_loss improved from 0.55009 to 0.54625, saving model to ./try/try_best_weights.h5
Epoch 44/150
 - 2s - loss: 0.5625 - acc: 0.8624 - val_loss: 0.5424 - val_acc: 0.9160

Epoch 00044: val_loss improved from 0.54625 to 0.54236, saving model to ./try/try_best_weights.h5
Epoch 45/150
 - 2s - loss: 0.5586 - acc: 0.8624 - val_loss: 0.5384 - val_acc: 0.9160

Epoch 00045: val_loss improved from 0.54236 to 0.53841, saving model to ./try/try_best_weights.h5
Epoch 46/150
 - 2s - loss: 0.5553 - acc: 0.8624 - val_loss: 0.5344 - val_acc: 0.9160

Epoch 00046: val_loss improved from 0.53841 to 0.53443, saving model to ./try/try_best_weights.h5
Epoch 47/150
 - 2s - loss: 0.5516 - acc: 0.8624 - val_loss: 0.5304 - val_acc: 0.9160

Epoch 00047: val_loss improved from 0.53443 to 0.53040, saving model to ./try/try_best_weights.h5
Epoch 48/150
 - 2s - loss: 0.5481 - acc: 0.8624 - val_loss: 0.5263 - val_acc: 0.9160

Epoch 00048: val_loss improved from 0.53040 to 0.52633, saving model to ./try/try_best_weights.h5
Epoch 49/150
 - 2s - loss: 0.5447 - acc: 0.8624 - val_loss: 0.5222 - val_acc: 0.9160

Epoch 00049: val_loss improved from 0.52633 to 0.52221, saving model to ./try/try_best_weights.h5
Epoch 50/150
 - 2s - loss: 0.5407 - acc: 0.8624 - val_loss: 0.5180 - val_acc: 0.9160

Epoch 00050: val_loss improved from 0.52221 to 0.51804, saving model to ./try/try_best_weights.h5
Epoch 51/150
 - 2s - loss: 0.5370 - acc: 0.8624 - val_loss: 0.5138 - val_acc: 0.9160

Epoch 00051: val_loss improved from 0.51804 to 0.51382, saving model to ./try/try_best_weights.h5
Epoch 52/150
 - 2s - loss: 0.5338 - acc: 0.8624 - val_loss: 0.5096 - val_acc: 0.9160

Epoch 00052: val_loss improved from 0.51382 to 0.50957, saving model to ./try/try_best_weights.h5
Epoch 53/150
 - 2s - loss: 0.5297 - acc: 0.8624 - val_loss: 0.5053 - val_acc: 0.9160

Epoch 00053: val_loss improved from 0.50957 to 0.50525, saving model to ./try/try_best_weights.h5
Epoch 54/150
 - 2s - loss: 0.5259 - acc: 0.8624 - val_loss: 0.5009 - val_acc: 0.9160

Epoch 00054: val_loss improved from 0.50525 to 0.50089, saving model to ./try/try_best_weights.h5
Epoch 55/150
 - 2s - loss: 0.5222 - acc: 0.8624 - val_loss: 0.4965 - val_acc: 0.9160

Epoch 00055: val_loss improved from 0.50089 to 0.49648, saving model to ./try/try_best_weights.h5
Epoch 56/150
 - 2s - loss: 0.5184 - acc: 0.8624 - val_loss: 0.4920 - val_acc: 0.9160

Epoch 00056: val_loss improved from 0.49648 to 0.49204, saving model to ./try/try_best_weights.h5
Epoch 57/150
 - 2s - loss: 0.5149 - acc: 0.8624 - val_loss: 0.4876 - val_acc: 0.9160

Epoch 00057: val_loss improved from 0.49204 to 0.48756, saving model to ./try/try_best_weights.h5
Epoch 58/150
 - 2s - loss: 0.5105 - acc: 0.8624 - val_loss: 0.4830 - val_acc: 0.9160

Epoch 00058: val_loss improved from 0.48756 to 0.48302, saving model to ./try/try_best_weights.h5
Epoch 59/150
 - 2s - loss: 0.5068 - acc: 0.8624 - val_loss: 0.4785 - val_acc: 0.9160

Epoch 00059: val_loss improved from 0.48302 to 0.47845, saving model to ./try/try_best_weights.h5
Epoch 60/150
 - 2s - loss: 0.5028 - acc: 0.8624 - val_loss: 0.4738 - val_acc: 0.9160

Epoch 00060: val_loss improved from 0.47845 to 0.47385, saving model to ./try/try_best_weights.h5
Epoch 61/150
 - 2s - loss: 0.4988 - acc: 0.8624 - val_loss: 0.4692 - val_acc: 0.9160

Epoch 00061: val_loss improved from 0.47385 to 0.46921, saving model to ./try/try_best_weights.h5
Epoch 62/150
 - 2s - loss: 0.4949 - acc: 0.8624 - val_loss: 0.4645 - val_acc: 0.9160

Epoch 00062: val_loss improved from 0.46921 to 0.46454, saving model to ./try/try_best_weights.h5
Epoch 63/150
 - 2s - loss: 0.4912 - acc: 0.8624 - val_loss: 0.4599 - val_acc: 0.9160

Epoch 00063: val_loss improved from 0.46454 to 0.45986, saving model to ./try/try_best_weights.h5
Epoch 64/150
 - 2s - loss: 0.4868 - acc: 0.8624 - val_loss: 0.4552 - val_acc: 0.9160

Epoch 00064: val_loss improved from 0.45986 to 0.45515, saving model to ./try/try_best_weights.h5
Epoch 65/150
 - 2s - loss: 0.4830 - acc: 0.8624 - val_loss: 0.4505 - val_acc: 0.9160

Epoch 00065: val_loss improved from 0.45515 to 0.45046, saving model to ./try/try_best_weights.h5
Epoch 66/150
 - 2s - loss: 0.4790 - acc: 0.8624 - val_loss: 0.4458 - val_acc: 0.9160

Epoch 00066: val_loss improved from 0.45046 to 0.44575, saving model to ./try/try_best_weights.h5
Epoch 67/150
 - 2s - loss: 0.4751 - acc: 0.8624 - val_loss: 0.4411 - val_acc: 0.9160

Epoch 00067: val_loss improved from 0.44575 to 0.44107, saving model to ./try/try_best_weights.h5
Epoch 68/150
 - 2s - loss: 0.4718 - acc: 0.8624 - val_loss: 0.4364 - val_acc: 0.9160

Epoch 00068: val_loss improved from 0.44107 to 0.43642, saving model to ./try/try_best_weights.h5
Epoch 69/150
 - 2s - loss: 0.4682 - acc: 0.8624 - val_loss: 0.4318 - val_acc: 0.9160

Epoch 00069: val_loss improved from 0.43642 to 0.43183, saving model to ./try/try_best_weights.h5
Epoch 70/150
 - 2s - loss: 0.4649 - acc: 0.8624 - val_loss: 0.4273 - val_acc: 0.9160

Epoch 00070: val_loss improved from 0.43183 to 0.42731, saving model to ./try/try_best_weights.h5
Epoch 71/150
 - 2s - loss: 0.4606 - acc: 0.8624 - val_loss: 0.4228 - val_acc: 0.9160

Epoch 00071: val_loss improved from 0.42731 to 0.42282, saving model to ./try/try_best_weights.h5
Epoch 72/150
 - 2s - loss: 0.4577 - acc: 0.8624 - val_loss: 0.4184 - val_acc: 0.9160

Epoch 00072: val_loss improved from 0.42282 to 0.41844, saving model to ./try/try_best_weights.h5
Epoch 73/150
 - 2s - loss: 0.4545 - acc: 0.8624 - val_loss: 0.4141 - val_acc: 0.9160

Epoch 00073: val_loss improved from 0.41844 to 0.41415, saving model to ./try/try_best_weights.h5
Epoch 74/150
 - 2s - loss: 0.4508 - acc: 0.8624 - val_loss: 0.4099 - val_acc: 0.9160

Epoch 00074: val_loss improved from 0.41415 to 0.40995, saving model to ./try/try_best_weights.h5
Epoch 75/150
 - 2s - loss: 0.4486 - acc: 0.8624 - val_loss: 0.4059 - val_acc: 0.9160

Epoch 00075: val_loss improved from 0.40995 to 0.40590, saving model to ./try/try_best_weights.h5
Epoch 76/150
 - 2s - loss: 0.4457 - acc: 0.8624 - val_loss: 0.4020 - val_acc: 0.9160

Epoch 00076: val_loss improved from 0.40590 to 0.40202, saving model to ./try/try_best_weights.h5
Epoch 77/150
 - 2s - loss: 0.4421 - acc: 0.8624 - val_loss: 0.3982 - val_acc: 0.9160

Epoch 00077: val_loss improved from 0.40202 to 0.39824, saving model to ./try/try_best_weights.h5
Epoch 78/150
 - 2s - loss: 0.4405 - acc: 0.8624 - val_loss: 0.3946 - val_acc: 0.9160

Epoch 00078: val_loss improved from 0.39824 to 0.39463, saving model to ./try/try_best_weights.h5
Epoch 79/150
 - 2s - loss: 0.4390 - acc: 0.8624 - val_loss: 0.3912 - val_acc: 0.9160

Epoch 00079: val_loss improved from 0.39463 to 0.39122, saving model to ./try/try_best_weights.h5
Epoch 80/150
 - 2s - loss: 0.4372 - acc: 0.8624 - val_loss: 0.3880 - val_acc: 0.9160

Epoch 00080: val_loss improved from 0.39122 to 0.38800, saving model to ./try/try_best_weights.h5
Epoch 81/150
 - 2s - loss: 0.4346 - acc: 0.8624 - val_loss: 0.3849 - val_acc: 0.9160

Epoch 00081: val_loss improved from 0.38800 to 0.38489, saving model to ./try/try_best_weights.h5
Epoch 82/150
 - 2s - loss: 0.4325 - acc: 0.8624 - val_loss: 0.3820 - val_acc: 0.9160

Epoch 00082: val_loss improved from 0.38489 to 0.38198, saving model to ./try/try_best_weights.h5
Epoch 83/150
 - 2s - loss: 0.4311 - acc: 0.8624 - val_loss: 0.3792 - val_acc: 0.9160

Epoch 00083: val_loss improved from 0.38198 to 0.37923, saving model to ./try/try_best_weights.h5
Epoch 84/150
 - 2s - loss: 0.4299 - acc: 0.8624 - val_loss: 0.3767 - val_acc: 0.9160

Epoch 00084: val_loss improved from 0.37923 to 0.37667, saving model to ./try/try_best_weights.h5
Epoch 85/150
 - 2s - loss: 0.4291 - acc: 0.8624 - val_loss: 0.3743 - val_acc: 0.9160

Epoch 00085: val_loss improved from 0.37667 to 0.37430, saving model to ./try/try_best_weights.h5
Epoch 86/150
 - 2s - loss: 0.4278 - acc: 0.8624 - val_loss: 0.3721 - val_acc: 0.9160

Epoch 00086: val_loss improved from 0.37430 to 0.37210, saving model to ./try/try_best_weights.h5
Epoch 87/150
 - 2s - loss: 0.4274 - acc: 0.8624 - val_loss: 0.3701 - val_acc: 0.9160

Epoch 00087: val_loss improved from 0.37210 to 0.37007, saving model to ./try/try_best_weights.h5
Epoch 88/150
 - 2s - loss: 0.4256 - acc: 0.8624 - val_loss: 0.3682 - val_acc: 0.9160

Epoch 00088: val_loss improved from 0.37007 to 0.36819, saving model to ./try/try_best_weights.h5
Epoch 89/150
 - 2s - loss: 0.4249 - acc: 0.8624 - val_loss: 0.3664 - val_acc: 0.9160

Epoch 00089: val_loss improved from 0.36819 to 0.36644, saving model to ./try/try_best_weights.h5
Epoch 90/150
 - 2s - loss: 0.4245 - acc: 0.8624 - val_loss: 0.3648 - val_acc: 0.9160

Epoch 00090: val_loss improved from 0.36644 to 0.36483, saving model to ./try/try_best_weights.h5
Epoch 91/150
 - 2s - loss: 0.4240 - acc: 0.8624 - val_loss: 0.3633 - val_acc: 0.9160

Epoch 00091: val_loss improved from 0.36483 to 0.36335, saving model to ./try/try_best_weights.h5
Epoch 92/150
 - 2s - loss: 0.4232 - acc: 0.8624 - val_loss: 0.3620 - val_acc: 0.9160

Epoch 00092: val_loss improved from 0.36335 to 0.36199, saving model to ./try/try_best_weights.h5
Epoch 93/150
 - 2s - loss: 0.4244 - acc: 0.8624 - val_loss: 0.3608 - val_acc: 0.9160

Epoch 00093: val_loss improved from 0.36199 to 0.36078, saving model to ./try/try_best_weights.h5
Epoch 94/150
 - 2s - loss: 0.4236 - acc: 0.8624 - val_loss: 0.3597 - val_acc: 0.9160

Epoch 00094: val_loss improved from 0.36078 to 0.35966, saving model to ./try/try_best_weights.h5
Epoch 95/150
 - 2s - loss: 0.4231 - acc: 0.8624 - val_loss: 0.3586 - val_acc: 0.9160

Epoch 00095: val_loss improved from 0.35966 to 0.35864, saving model to ./try/try_best_weights.h5
Epoch 96/150
 - 2s - loss: 0.4221 - acc: 0.8624 - val_loss: 0.3577 - val_acc: 0.9160

Epoch 00096: val_loss improved from 0.35864 to 0.35766, saving model to ./try/try_best_weights.h5
Epoch 97/150
 - 2s - loss: 0.4209 - acc: 0.8624 - val_loss: 0.3567 - val_acc: 0.9160

Epoch 00097: val_loss improved from 0.35766 to 0.35671, saving model to ./try/try_best_weights.h5
Epoch 98/150
 - 2s - loss: 0.4219 - acc: 0.8624 - val_loss: 0.3559 - val_acc: 0.9160

Epoch 00098: val_loss improved from 0.35671 to 0.35588, saving model to ./try/try_best_weights.h5
Epoch 99/150
 - 2s - loss: 0.4205 - acc: 0.8624 - val_loss: 0.3551 - val_acc: 0.9160

Epoch 00099: val_loss improved from 0.35588 to 0.35509, saving model to ./try/try_best_weights.h5
Epoch 100/150
 - 2s - loss: 0.4211 - acc: 0.8624 - val_loss: 0.3544 - val_acc: 0.9160

Epoch 00100: val_loss improved from 0.35509 to 0.35436, saving model to ./try/try_best_weights.h5
Epoch 101/150
 - 2s - loss: 0.4205 - acc: 0.8624 - val_loss: 0.3537 - val_acc: 0.9160

Epoch 00101: val_loss improved from 0.35436 to 0.35372, saving model to ./try/try_best_weights.h5
Epoch 102/150
 - 2s - loss: 0.4214 - acc: 0.8624 - val_loss: 0.3531 - val_acc: 0.9160

Epoch 00102: val_loss improved from 0.35372 to 0.35313, saving model to ./try/try_best_weights.h5
Epoch 103/150
 - 2s - loss: 0.4210 - acc: 0.8624 - val_loss: 0.3526 - val_acc: 0.9160

Epoch 00103: val_loss improved from 0.35313 to 0.35260, saving model to ./try/try_best_weights.h5
Epoch 104/150
 - 2s - loss: 0.4204 - acc: 0.8624 - val_loss: 0.3521 - val_acc: 0.9160

Epoch 00104: val_loss improved from 0.35260 to 0.35210, saving model to ./try/try_best_weights.h5
Epoch 105/150
 - 2s - loss: 0.4217 - acc: 0.8624 - val_loss: 0.3517 - val_acc: 0.9160

Epoch 00105: val_loss improved from 0.35210 to 0.35169, saving model to ./try/try_best_weights.h5
Epoch 106/150
 - 2s - loss: 0.4212 - acc: 0.8624 - val_loss: 0.3513 - val_acc: 0.9160

Epoch 00106: val_loss improved from 0.35169 to 0.35126, saving model to ./try/try_best_weights.h5
Epoch 107/150
 - 2s - loss: 0.4213 - acc: 0.8624 - val_loss: 0.3509 - val_acc: 0.9160

Epoch 00107: val_loss improved from 0.35126 to 0.35087, saving model to ./try/try_best_weights.h5
Epoch 108/150
 - 2s - loss: 0.4202 - acc: 0.8624 - val_loss: 0.3505 - val_acc: 0.9160

Epoch 00108: val_loss improved from 0.35087 to 0.35046, saving model to ./try/try_best_weights.h5
Epoch 109/150
 - 2s - loss: 0.4192 - acc: 0.8624 - val_loss: 0.3501 - val_acc: 0.9160

Epoch 00109: val_loss improved from 0.35046 to 0.35006, saving model to ./try/try_best_weights.h5
Epoch 110/150
 - 2s - loss: 0.4205 - acc: 0.8624 - val_loss: 0.3497 - val_acc: 0.9160

Epoch 00110: val_loss improved from 0.35006 to 0.34973, saving model to ./try/try_best_weights.h5
Epoch 111/150
 - 2s - loss: 0.4198 - acc: 0.8624 - val_loss: 0.3494 - val_acc: 0.9160

Epoch 00111: val_loss improved from 0.34973 to 0.34941, saving model to ./try/try_best_weights.h5
Epoch 112/150
 - 2s - loss: 0.4198 - acc: 0.8624 - val_loss: 0.3491 - val_acc: 0.9160

Epoch 00112: val_loss improved from 0.34941 to 0.34910, saving model to ./try/try_best_weights.h5
Epoch 113/150
 - 2s - loss: 0.4197 - acc: 0.8624 - val_loss: 0.3488 - val_acc: 0.9160

Epoch 00113: val_loss improved from 0.34910 to 0.34880, saving model to ./try/try_best_weights.h5
Epoch 114/150
 - 2s - loss: 0.4198 - acc: 0.8624 - val_loss: 0.3485 - val_acc: 0.9160

Epoch 00114: val_loss improved from 0.34880 to 0.34855, saving model to ./try/try_best_weights.h5
Epoch 115/150
 - 2s - loss: 0.4202 - acc: 0.8624 - val_loss: 0.3483 - val_acc: 0.9160

Epoch 00115: val_loss improved from 0.34855 to 0.34830, saving model to ./try/try_best_weights.h5
Epoch 116/150
 - 2s - loss: 0.4208 - acc: 0.8624 - val_loss: 0.3481 - val_acc: 0.9160

Epoch 00116: val_loss improved from 0.34830 to 0.34810, saving model to ./try/try_best_weights.h5
Epoch 117/150
 - 2s - loss: 0.4198 - acc: 0.8624 - val_loss: 0.3479 - val_acc: 0.9160

Epoch 00117: val_loss improved from 0.34810 to 0.34787, saving model to ./try/try_best_weights.h5
Epoch 118/150
 - 2s - loss: 0.4192 - acc: 0.8624 - val_loss: 0.3476 - val_acc: 0.9160

Epoch 00118: val_loss improved from 0.34787 to 0.34762, saving model to ./try/try_best_weights.h5
Epoch 119/150
 - 8s - loss: 0.4194 - acc: 0.8624 - val_loss: 0.3474 - val_acc: 0.9160

Epoch 00119: val_loss improved from 0.34762 to 0.34740, saving model to ./try/try_best_weights.h5
Epoch 120/150
 - 3s - loss: 0.4195 - acc: 0.8624 - val_loss: 0.3472 - val_acc: 0.9160

Epoch 00120: val_loss improved from 0.34740 to 0.34719, saving model to ./try/try_best_weights.h5
Epoch 121/150
 - 3s - loss: 0.4193 - acc: 0.8624 - val_loss: 0.3470 - val_acc: 0.9160

Epoch 00121: val_loss improved from 0.34719 to 0.34701, saving model to ./try/try_best_weights.h5
Epoch 122/150
 - 2s - loss: 0.4202 - acc: 0.8624 - val_loss: 0.3468 - val_acc: 0.9160

Epoch 00122: val_loss improved from 0.34701 to 0.34684, saving model to ./try/try_best_weights.h5
Epoch 123/150
 - 2s - loss: 0.4191 - acc: 0.8624 - val_loss: 0.3466 - val_acc: 0.9160

Epoch 00123: val_loss improved from 0.34684 to 0.34663, saving model to ./try/try_best_weights.h5
Epoch 124/150
 - 2s - loss: 0.4190 - acc: 0.8624 - val_loss: 0.3464 - val_acc: 0.9160

Epoch 00124: val_loss improved from 0.34663 to 0.34645, saving model to ./try/try_best_weights.h5
Epoch 125/150
 - 2s - loss: 0.4195 - acc: 0.8624 - val_loss: 0.3463 - val_acc: 0.9160

Epoch 00125: val_loss improved from 0.34645 to 0.34627, saving model to ./try/try_best_weights.h5
Epoch 126/150
 - 2s - loss: 0.4195 - acc: 0.8624 - val_loss: 0.3461 - val_acc: 0.9160

Epoch 00126: val_loss improved from 0.34627 to 0.34611, saving model to ./try/try_best_weights.h5
Epoch 127/150
 - 2s - loss: 0.4186 - acc: 0.8624 - val_loss: 0.3459 - val_acc: 0.9160

Epoch 00127: val_loss improved from 0.34611 to 0.34591, saving model to ./try/try_best_weights.h5
Epoch 128/150
 - 2s - loss: 0.4190 - acc: 0.8624 - val_loss: 0.3457 - val_acc: 0.9160

Epoch 00128: val_loss improved from 0.34591 to 0.34574, saving model to ./try/try_best_weights.h5
Epoch 129/150
 - 2s - loss: 0.4185 - acc: 0.8624 - val_loss: 0.3456 - val_acc: 0.9160

Epoch 00129: val_loss improved from 0.34574 to 0.34557, saving model to ./try/try_best_weights.h5
Epoch 130/150
 - 2s - loss: 0.4178 - acc: 0.8624 - val_loss: 0.3454 - val_acc: 0.9160

Epoch 00130: val_loss improved from 0.34557 to 0.34540, saving model to ./try/try_best_weights.h5
Epoch 131/150
 - 2s - loss: 0.4185 - acc: 0.8624 - val_loss: 0.3452 - val_acc: 0.9160

Epoch 00131: val_loss improved from 0.34540 to 0.34523, saving model to ./try/try_best_weights.h5
Epoch 132/150
 - 2s - loss: 0.4186 - acc: 0.8624 - val_loss: 0.3451 - val_acc: 0.9160

Epoch 00132: val_loss improved from 0.34523 to 0.34506, saving model to ./try/try_best_weights.h5
Epoch 133/150
 - 2s - loss: 0.4185 - acc: 0.8624 - val_loss: 0.3449 - val_acc: 0.9160

Epoch 00133: val_loss improved from 0.34506 to 0.34490, saving model to ./try/try_best_weights.h5
Epoch 134/150
 - 2s - loss: 0.4184 - acc: 0.8624 - val_loss: 0.3448 - val_acc: 0.9160

Epoch 00134: val_loss improved from 0.34490 to 0.34476, saving model to ./try/try_best_weights.h5
Epoch 135/150
 - 2s - loss: 0.4186 - acc: 0.8624 - val_loss: 0.3446 - val_acc: 0.9160

Epoch 00135: val_loss improved from 0.34476 to 0.34462, saving model to ./try/try_best_weights.h5
Epoch 136/150
 - 2s - loss: 0.4177 - acc: 0.8624 - val_loss: 0.3444 - val_acc: 0.9160

Epoch 00136: val_loss improved from 0.34462 to 0.34443, saving model to ./try/try_best_weights.h5
Epoch 137/150
 - 2s - loss: 0.4180 - acc: 0.8624 - val_loss: 0.3443 - val_acc: 0.9160

Epoch 00137: val_loss improved from 0.34443 to 0.34427, saving model to ./try/try_best_weights.h5
Epoch 138/150
 - 2s - loss: 0.4191 - acc: 0.8624 - val_loss: 0.3442 - val_acc: 0.9160

Epoch 00138: val_loss improved from 0.34427 to 0.34417, saving model to ./try/try_best_weights.h5
Epoch 139/150
 - 2s - loss: 0.4182 - acc: 0.8624 - val_loss: 0.3440 - val_acc: 0.9160

Epoch 00139: val_loss improved from 0.34417 to 0.34403, saving model to ./try/try_best_weights.h5
Epoch 140/150
 - 2s - loss: 0.4198 - acc: 0.8624 - val_loss: 0.3440 - val_acc: 0.9160

Epoch 00140: val_loss improved from 0.34403 to 0.34395, saving model to ./try/try_best_weights.h5
Epoch 141/150
 - 2s - loss: 0.4185 - acc: 0.8624 - val_loss: 0.3438 - val_acc: 0.9160

Epoch 00141: val_loss improved from 0.34395 to 0.34383, saving model to ./try/try_best_weights.h5
Epoch 142/150
 - 2s - loss: 0.4186 - acc: 0.8624 - val_loss: 0.3437 - val_acc: 0.9160

Epoch 00142: val_loss improved from 0.34383 to 0.34370, saving model to ./try/try_best_weights.h5
Epoch 143/150
 - 2s - loss: 0.4186 - acc: 0.8624 - val_loss: 0.3436 - val_acc: 0.9160

Epoch 00143: val_loss improved from 0.34370 to 0.34358, saving model to ./try/try_best_weights.h5
Epoch 144/150
 - 2s - loss: 0.4182 - acc: 0.8624 - val_loss: 0.3434 - val_acc: 0.9160

Epoch 00144: val_loss improved from 0.34358 to 0.34343, saving model to ./try/try_best_weights.h5
Epoch 145/150
 - 2s - loss: 0.4180 - acc: 0.8624 - val_loss: 0.3433 - val_acc: 0.9160

Epoch 00145: val_loss improved from 0.34343 to 0.34328, saving model to ./try/try_best_weights.h5
Epoch 146/150
 - 2s - loss: 0.4172 - acc: 0.8624 - val_loss: 0.3431 - val_acc: 0.9160

Epoch 00146: val_loss improved from 0.34328 to 0.34313, saving model to ./try/try_best_weights.h5
Epoch 147/150
 - 2s - loss: 0.4182 - acc: 0.8624 - val_loss: 0.3430 - val_acc: 0.9160

Epoch 00147: val_loss improved from 0.34313 to 0.34301, saving model to ./try/try_best_weights.h5
Epoch 148/150
 - 2s - loss: 0.4178 - acc: 0.8624 - val_loss: 0.3429 - val_acc: 0.9160

Epoch 00148: val_loss improved from 0.34301 to 0.34288, saving model to ./try/try_best_weights.h5
Epoch 149/150
 - 2s - loss: 0.4178 - acc: 0.8624 - val_loss: 0.3428 - val_acc: 0.9160

Epoch 00149: val_loss improved from 0.34288 to 0.34275, saving model to ./try/try_best_weights.h5
Epoch 150/150
 - 2s - loss: 0.4188 - acc: 0.8624 - val_loss: 0.3427 - val_acc: 0.9160

Epoch 00150: val_loss improved from 0.34275 to 0.34266, saving model to ./try/try_best_weights.h5
